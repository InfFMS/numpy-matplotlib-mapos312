
# Задача:
# Создайте шахматную доску размером 8×8, где чёрные клетки обозначены числом 1, а белые — 0.
# Укажите координаты клетки, где находится ферзь, например, [4,4].
# Определите клетки, которые атакует ферзь (в строке, столбце и диагоналях).
# Визуализация: Используйте тепловую карту (imshow), чтобы показать шахматную доску. Отметьте положение ферзя и атакуемые клетки цветами.
# Задача:
# Создайте шахматную доску размером 8×8, где чёрные клетки обозначены числом 1, а белые — 0.
# Укажите координаты клетки, где находится ферзь, например, [4,4].
# Определите клетки, которые атакует ферзь (в строке, столбце и диагоналях).
# Визуализация: Используйте тепловую карту (imshow), чтобы показать шахматную доску. Отметьте положение ферзя и атакуемые клетки цветами.
# Задача:
# Создайте шахматную доску размером 8×8, где чёрные клетки обозначены числом 1, а белые — 0.
# Укажите координаты клетки, где находится ферзь, например, [4,4].
# Определите клетки, которые атакует ферзь (в строке, столбце и диагоналях).
# Визуализация: Используйте тепловую карту (imshow), чтобы показать шахматную доску. Отметьте положение ферзя и атакуемые клетки цветами.
import numpy as np
import matplotlib.pyplot as plt
fig, ax = plt.subplots()
x = np.array([[0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0] ]) #ввел
plt.imshow(x, cmap='Greys')
OX= ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']
plt.xticks(range(8), labels=[f"{OX[i]}" for i in range(8)])
plt.yticks(range(8), labels=[f"{i}" for i in range(0, 8, 1)])

x1 = int(input("координата по Х")) - 1
y1 = 8 - int(input("координата по У"))

for i in range(0, 8):
    o1 = plt.Circle((i, y1), 0.2, facecolor="red")
    ax.add_patch(o1)
    o2 = plt.Circle((x1, i), 0.2, facecolor="red")
    ax.add_patch(o2)

x = x1
y = y1
while y < 8 and x < 8:
    o3 = plt.Circle((x, y), 0.2, facecolor="red")
    ax.add_patch(o3)
    x += 1
    y += 1

x = x1
y = y1
while y < 8 and x > -1:
    print(x, y)
    o4 = plt.Circle((x, y), 0.2, edgecolor="black", facecolor="red")
    ax.add_patch(o4)
    x -= 1
    y += 1

x = x1
y = y1
while y > -1 and x < 8:
    print(x, y)
    o5 = plt.Circle((x, y), 0.2, edgecolor="black", facecolor="red")
    ax.add_patch(o5)
    x += 1
    y -= 1

x = x1
y = y1
while y > -1 and x > -1:
    print(x, y)
    o6 = plt.Circle((x, y), 0.2, edgecolor="black", facecolor="red")
    ax.add_patch(o6)
    x -= 1
    y -= 1
ferz = plt.Circle((x1, y1), 0.4,facecolor="blue")
ax.add_patch(ferz)
plt.show()